<?xml version="1.0" ?>
<!DOCTYPE plugin PUBLIC "-//JPF//Java Plug-in Manifest 1.0" "http://jpf.sourceforge.net/plugin_1_0.dtd">
<plugin id="org.integratedmodelling.thinklab.geospace" version="0.8.0" class="org.integratedmodelling.geospace.Geospace">
	<requires>
		<import plugin-id="org.integratedmodelling.thinklab.core"/>
		<import plugin-id="org.integratedmodelling.thinklab.opal"/>
		<import plugin-id="org.integratedmodelling.thinklab.corescience"/>
		<import plugin-id="org.integratedmodelling.thinklab.clojure"/>
	</requires>
	<runtime>
		<library id="core" path="classes/" type="code">
			<export prefix="*"/>
		</library>
		
		<library type="resources" path="ontologies/" id="ontologies" />
		<library type="resources" path="config/" id="config" />
		<library type="resources" path="worldimages/" id="worldimages" />
		<library type="resources" path="bindings/" id="bindings" />
		
		<library type="code" id="batik-awt-util" path="lib/batik-awt-util-1.6.jar"/>
		<library type="code" id="batik-bridge" path="lib/batik-bridge-1.6.jar"/>
		<library type="code" id="batik-css" path="lib/batik-css-1.6.jar"/>
		<library type="code" id="batik-dom" path="lib/batik-dom-1.6.jar"/>
		<library type="code" id="batik-ext" path="lib/batik-ext-1.6.jar"/>
		<library type="code" id="batik-gvt" path="lib/batik-gvt-1.6.jar"/>
		<library type="code" id="batik-parser" path="lib/batik-parser-1.6.jar"/>
		<library type="code" id="batik-script" path="lib/batik-script-1.6.jar"/>
		<library type="code" id="batik-svg-dom" path="lib/batik-svg-dom-1.6.jar"/>
		<library type="code" id="batik-svggen" path="lib/batik-svggen-1.6.jar"/>
		<library type="code" id="batik-transcoder" path="lib/batik-transcoder-1.6.jar"/>
		<library type="code" id="batik-util" path="lib/batik-util-1.6.jar"/>
		<library type="code" id="batik-xml" path="lib/batik-xml-1.6.jar"/>
		<library type="code" id="bufr" path="lib/bufr-1.1.00.jar"/>
		<library type="code" id="ecore" path="lib/ecore-2.2.2.jar"/>
		<library type="code" id="geoapi" path="lib/geoapi-2.2-M1.jar">
			<export prefix="*"/>
		</library>
		<library type="code" id="gnu-regexp" path="lib/gnu-regexp-1.1.4.jar"/>
		<library type="code" id="grib" path="lib/grib-5.1.03.jar"/>
		<library type="code" id="gt-api" path="lib/gt-api-2.5.2.jar">
			<export prefix="*"/>
		</library>
		<library type="code" id="gt2-arcgrid" path="lib/gt-arcgrid-2.5.2.jar"/>
		<library type="code" id="gt2-arcsde" path="lib/gt-arcsde-2.5.2.jar"/>
		<library type="code" id="gt2-brewer" path="lib/gt-brewer-2.5.2.jar"/>
		<library type="code" id="gt2-coverage" path="lib/gt-coverage-2.5.2.jar">
			<export prefix="*"/>
		</library>
		<library type="code" id="gt2-cql" path="lib/gt-cql-2.5.2.jar"/>
		<library type="code" id="gt2-data" path="lib/gt-data-2.5.2.jar"/>
		<library type="code" id="gt2-db2" path="lib/gt-db2-2.5.2.jar"/>
		<library type="code" id="gt2-epsg-hsql" path="lib/gt-epsg-hsql-2.5.2.jar"/>
		<library type="code" id="gt2-geotiff" path="lib/gt-geotiff-2.5.2.jar"/>
		<library type="code" id="gt2-graph" path="lib/gt-graph-2.5.2.jar"/>
		<library type="code" id="gt2-gtopo30" path="lib/gt-gtopo30-2.5.2.jar"/>
		<library type="code" id="gt2-image" path="lib/gt-image-2.5.2.jar"/>
		<library type="code" id="gt2-imagemosaic" path="lib/gt-imagemosaic-2.5.2.jar"/>
		<library type="code" id="gt2-imagemosaic-JDBC" path="lib/gt-imagemosaic-jdbc-2.5.2.jar"/>
		<library type="code" id="gt2-imagepyramid" path="lib/gt-imagepyramid-2.5.2.jar"/>
		<library type="code" id="gt2-jdbc" path="lib/gt-jdbc-2.5.2.jar"/>
		<library type="code" id="gt2-main" path="lib/gt-main-2.5.2.jar"/>
		<library type="code" id="gt2-mappane" path="lib/gt-mappane-2.5-SNAPSHOT.jar"/>
		<library type="code" id="gt2-metadata" path="lib/gt-metadata-2.5.2.jar"/>
		<library type="code" id="gt2-openoffice" path="lib/gt-openoffice-2.5.2.jar"/>
		<library type="code" id="gt2-postgis" path="lib/gt-postgis-2.5.2.jar"/>
		<library type="code" id="gt2-referencing" path="lib/gt-referencing-2.5.2.jar">
			<export prefix="*"/>
		</library>
		<library type="code" id="gt2-referencing3D" path="lib/gt-referencing3D-2.5.2.jar">
			<export prefix="*"/>
		</library>
		<library type="code" id="gt2-render" path="lib/gt-render-2.5.2.jar"/>
		<library type="code" id="gt2-shapefile" path="lib/gt-shapefile-2.5.2.jar"/>
		<library type="code" id="gt2-shapefile-renderer" path="lib/gt-shapefile-renderer-2.5.2.jar"/>
		<library type="code" id="gt2-svgsupport" path="lib/gt-svgsupport-2.5.2.jar"/>
		<library type="code" id="gt2-validation" path="lib/gt-validation-2.5.2.jar"/>
		<library type="code" id="gt2-wfs" path="lib/gt-wfs-2.5.2.jar"/>
		<library type="code" id="gt2-widgets-swing" path="lib/gt-widgets-swing-2.5.2.jar"/>
		<library type="code" id="gt2-wms" path="lib/gt-wms-2.5.2.jar"/>
		<library type="code" id="gt2-xml" path="lib/gt-xml-2.5.2.jar"/>
		<library type="code" id="gt2-xsd-core" path="lib/gt-xsd-core-2.5.2.jar"/>
		<library type="code" id="gt2-xsd-filter" path="lib/gt-xsd-filter-2.5.2.jar"/>
		<library type="code" id="gt2-xsd-gml2" path="lib/gt-xsd-gml2-2.5.2.jar"/>
		<library type="code" id="gt2-xsd-gml3" path="lib/gt-xsd-gml3-2.5.2.jar"/>
		<library type="code" id="gt2-xsd-kml" path="lib/gt-xsd-kml-2.5.2.jar"/>
		<library type="code" id="gt2-xsd-ows" path="lib/gt-xsd-ows-2.5.2.jar"/>
		<library type="code" id="gt2-xsd-sld" path="lib/gt-xsd-sld-2.5.2.jar"/>
		<library type="code" id="gt2-xsd-wfs" path="lib/gt-xsd-wfs-2.5.2.jar"/>
		<library type="code" id="gt2-xsd-wps" path="lib/gt-xsd-wps-2.5.2.jar"/>
		<library type="code" id="hsqldb" path="lib/hsqldb-1.8.0.7.jar"/>
		<library type="code" id="imageio-ext-arcgrid" path="lib/imageio-ext-arcgrid-1.0-SNAPSHOT.jar"/>
		<library type="code" id="imageio-ext-customstreams" path="lib/imageio-ext-customstreams-1.0-SNAPSHOT.jar"/>
		<library type="code" id="jaxb-api" path="lib/jaxb-api-1.3.jar"/>
		<library type="code" id="jaxb-impl" path="lib/jaxb-impl-1.3.jar"/>
		<library type="code" id="jaxb-libs" path="lib/jaxb-libs-1.3.jar"/>
		<library type="code" id="jdom" path="lib/jdom-1.0.jar"/>
		<library type="code" id="jlfgr" path="lib/jlfgr-1.0.jar"/>
		<library type="code" id="jsqlparser" path="lib/jsqlparser-0.3.14.jar"/>
		<library type="code" id="jsr108" path="lib/jsr108-0.01.jar"/>
		<library type="code" id="jts" path="lib/jts-1.9.jar">
			<export prefix="*"/>
		</library>
		<library type="code" id="mysql-connector" path="lib/mysql-connector-java-5.1.5.jar"/>
		<library type="code" id="netcdf" path="lib/netcdf-2.2.20.jar"/>
		<library type="code" id="picocontainer" path="lib/picocontainer-1.2.jar"/>
		<library type="code" id="postgis-driver" path="lib/postgis-driver-1.0.jar"/>
		<library type="code" id="relaxngDatatype" path="lib/relaxngDatatype-X.jar"/>
		<library type="code" id="slf4j-api" path="lib/slf4j-api-1.4.0.jar"/>
		<library type="code" id="slf4j-jdk" path="lib/slf4j-jdk14-1.4.0.jar"/>
		<library type="code" id="vecmath" path="lib/vecmath-1.3.1.jar"/>
	</runtime>


	<!-- ontologies -->
	<extension plugin-id="org.integratedmodelling.thinklab.core" point-id="ontology" id="geospace">
		<parameter id="url" value="geospace.owl"/>
		<parameter id="concept-space" value="geospace" />
	</extension>
	<extension plugin-id="org.integratedmodelling.thinklab.core" point-id="ontology" id="geonames">
		<parameter id="url" value="geonames.owl"/>
		<parameter id="concept-space" value="geonames" />
	</extension>
	<extension plugin-id="org.integratedmodelling.thinklab.core" point-id="ontology" id="geophysics">
		<parameter id="url" value="geophysics.owl"/>
		<parameter id="concept-space" value="geophysics" />
	</extension>
	<extension plugin-id="org.integratedmodelling.thinklab.core" point-id="ontology" id="geofeatures">
		<parameter id="url" value="geofeatures.owl"/>
		<parameter id="concept-space" value="geofeatures" />
	</extension>

	<!-- instance constructors -->
	<extension 
		plugin-id="org.integratedmodelling.thinklab.core" point-id="instance-constructor" 
		id="areal-location-constructor">
		<parameter id="class" value="org.integratedmodelling.geospace.constructors.ArealLocationConstructor"/>
		<parameter id="semantic-type" value="geospace:ArealLocation"/>
	</extension>
	<extension 
		plugin-id="org.integratedmodelling.thinklab.core" point-id="instance-constructor" 
		id="polygon-spatial-coverage-constructor">
		<parameter id="class" value="org.integratedmodelling.geospace.constructors.SubdividedCoverageModelConstructor"/>
		<parameter id="semantic-type" value="geospace:PolygonSpatialCoverage"/>
	</extension>
	<extension 
		plugin-id="org.integratedmodelling.thinklab.core" point-id="instance-constructor" 
		id="raster-spatial-coverage-constructor">
		<parameter id="class" value="org.integratedmodelling.geospace.constructors.SubdividedCoverageModelConstructor"/>
		<parameter id="semantic-type" value="geospace:RasterSpatialCoverage"/>
	</extension>
	<extension 
		plugin-id="org.integratedmodelling.thinklab.core" point-id="instance-constructor" 
		id="raster-grid-constructor">
		<parameter id="class" value="org.integratedmodelling.geospace.constructors.RasterGridConstructor"/>
		<parameter id="semantic-type" value="geospace:RasterGrid"/>
	</extension>
	<extension 
		plugin-id="org.integratedmodelling.thinklab.core" point-id="instance-constructor" 
		id="external-raster-datasource-constructor">
		<parameter id="class" value="org.integratedmodelling.geospace.constructors.RasterDatasourceConstructor"/>
		<parameter id="semantic-type" value="geospace:ExternalRasterDataSource"/>
	</extension>

	<!-- literal validators -->
	<extension 
		plugin-id="org.integratedmodelling.thinklab.core" point-id="literal-validator" 
		id="spatial-record-validator">
		<parameter id="class" value="org.integratedmodelling.geospace.constructors.GeospaceValidator"/>
		<parameter id="semantic-type" value="geospace:SpatialRecord"/>
	</extension>
	<extension 
		plugin-id="org.integratedmodelling.thinklab.core" point-id="literal-validator" 
		id="areal-location-validator">
		<parameter id="class" value="org.integratedmodelling.geospace.constructors.ArealLocationValidator"/>
		<parameter id="semantic-type" value="geospace:ArealLocation"/>
	</extension>

	<!-- kbox handler for coverages -->
	<extension plugin-id="org.integratedmodelling.thinklab.core" point-id="kbox-handler" id="shapefile-kbox-handler">
		<parameter id="class" value="org.integratedmodelling.geospace.GeospaceKboxHandler"/>
		<parameter id="protocol" value="shapefile" />
	</extension>
	
	<!-- knowledge loader for coverages -->
	<extension plugin-id="org.integratedmodelling.thinklab.core" point-id="knowledge-loader" id="coverage-knowledge-loader">
		<parameter id="class" value="org.integratedmodelling.geospace.GeospaceKnowledgeLoader"/>
		<parameter id="format" value="shp,tif,tiff" />
	</extension>
	
	<!-- commands -->
	<extension plugin-id="org.integratedmodelling.thinklab.core" point-id="command-handler" id="GISToOpal">
		<parameter id="class" value="org.integratedmodelling.corescience.commands.Contextualize"/>
		<parameter id="command-name" value="contextualize"/>
		<parameter id="command-description" value="contextualize an observation"/>
		<parameter id="argument-names" value="c1"/>
		<parameter id="argument-types" value="thinklab-core:Text"/>
		<parameter id="argument-descriptions" value="ID of the observation instance to contextualize"/>
		<parameter id="option-names" value="d"/>
		<parameter id="option-long-names" value="debug"/>
		<parameter id="option-types" value="owl:Nothing"/>
		<parameter id="option-descriptions" value="debug workflow"/>
	</extension>

	<extension plugin-id="org.integratedmodelling.thinklab.core" point-id="command-handler" id="rasterize">
		<parameter id="class" value="org.integratedmodelling.corescience.commands.Link"/>
		<parameter id="command-name" value="link"/>
		<parameter id="command-description" value="link two observations so that the state of the source is mediated from the destination"/>
		<parameter id="argument-names" value="c1,c2"/>
		<parameter id="argument-types" value="thinklab-core:Text,thinklab-core:Text"/>
		<parameter id="argument-descriptions" value="source observation,destination observation"/>
		<parameter id="option-names" value="c"/>
		<parameter id="option-long-names" value="conformance"/>
		<parameter id="option-types" value="thinklab-core:Text"/>
		<parameter id="option-descriptions" value="use specified conformance policy for mediation"/>
	</extension>

	<extension plugin-id="org.integratedmodelling.thinklab.core" point-id="command-handler" id="vectorize">
		<parameter id="class" value="org.integratedmodelling.corescience.commands.Olist"/>
		<parameter id="command-name" value="olist"/>
		<parameter id="command-description" value="list the structure and state of an observation"/>
		<parameter id="argument-names" value="observation"/>
		<parameter id="argument-types" value="thinklab-core:Text"/>
		<parameter id="argument-descriptions" value="ID of the observation instance to inspect"/>
	</extension>

	<!-- bindings -->
	<extension plugin-id="org.integratedmodelling.thinklab.core" point-id="language-binding" id="clj">
		<parameter id="language" value="clojure"/>
		<parameter id="resource" value="clojure/geospace.clj"/>
	</extension>
	
</plugin>