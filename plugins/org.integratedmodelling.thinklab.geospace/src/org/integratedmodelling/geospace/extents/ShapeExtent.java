/**
 * ShapeExtent.java
 * ----------------------------------------------------------------------------------
 * 
 * Copyright (C) 2008 www.integratedmodelling.org
 * Created: Feb 18, 2008
 *
 * ----------------------------------------------------------------------------------
 * This file is part of ThinklabGeospacePlugin.
 * 
 * ThinklabGeospacePlugin is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 * 
 * ThinklabGeospacePlugin is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with the software; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 * 
 * ----------------------------------------------------------------------------------
 * 
 * @copyright 2008 www.integratedmodelling.org
 * @author    Ferdinando Villa (fvilla@uvm.edu)
 * @date      Feb 18, 2008
 * @license   http://www.gnu.org/licenses/gpl.txt GNU General Public License v3
 * @link      http://www.integratedmodelling.org
 **/
package org.integratedmodelling.geospace.extents;

import org.geotools.feature.FeatureCollection;
import org.integratedmodelling.geospace.cmodel.SpatialConceptualModel;
import org.integratedmodelling.thinklab.exception.ThinklabException;
import org.integratedmodelling.thinklab.interfaces.IValue;
import org.integratedmodelling.utils.MiscUtilities;
import org.integratedmodelling.utils.NameGenerator;
import org.opengis.referencing.crs.CoordinateReferenceSystem;

import com.vividsolutions.jts.geom.Envelope;
import com.vividsolutions.jts.geom.Geometry;

/**
 * Shape extents are generated by vector-oriented contextualization strategies. Raster 
 * CMs should be capable of dealing with them too.
 * 
 * @author Ferdinando
 *
 */
public class ShapeExtent extends ArealExtent {

	// we either have one shape or a feature collection. If we see space as a collection of features, the
	// shape should be the convex hull of all features, but we don't compute it unless necessary.
	Geometry shape = null;
	FeatureCollection features = null;
	private String featureURL;
	
	public ShapeExtent(Envelope envelope, CoordinateReferenceSystem crs, SpatialConceptualModel cm) {
		super(cm, crs, envelope);
	}

	public ShapeExtent(FeatureCollection features, String sourceURL, CoordinateReferenceSystem crs, SpatialConceptualModel cm) {
		super(cm, crs, features.getBounds());
		this.features = features;
		this.featureURL = sourceURL;
	}
	
	public ShapeExtent(Geometry shape, CoordinateReferenceSystem crs, SpatialConceptualModel cm) {
		super(cm, crs, shape.getEnvelope().getEnvelopeInternal());
		this.shape = shape;
	}

	public IValue getFullExtentValue() {
		// TODO Auto-generated method stub
		return null;
	}

	public IValue getState(int granule) throws ThinklabException {
		// TODO Auto-generated method stub
		return null;
	}

	public int getTotalGranularity() {
		return features == null ? 1 : features.size();
	}
	
	public Geometry getShape() {
		return shape;
	}

	public void setFeatures(FeatureCollection features, String sourceURL) {
		this.features = features;
		this.featureURL = sourceURL;
	}

	/*
	 * a fast way to check if the features are different, assuming features are read-only
	 */
	public boolean hasDifferentFeatures(ShapeExtent otextent) {

		boolean ret = false;
		
		if (features == null && otextent.features == null) {

			if (shape == null && otextent.shape == null)
				ret = false;
			else if (shape == null || otextent.shape == null) 
				ret = true;
			else
				ret = shape.equals(otextent.shape);
			
		} else if (features == null || otextent.features == null) {
			ret = true;
		} else {
			ret = !(this.featureURL.equals(otextent.featureURL));
		}
		return ret;
	}

}
